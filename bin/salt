#!/usr/bin/env ruby

$:.unshift(__dir__)

require 'yaml'
require 'salt'

command = ARGV.shift()

unless command.nil?
  matches = command.match(/(build|serve)/)
  command = matches ? matches[1] : nil
end

if command.nil?
  puts "usage: salt [build, serve]"
  exit
end

command = command.to_sym

config_path = File.join(__dir__, 'config.yml')

if File.exists?(config_path)
  begin
    config = YAML::load_file(config_path)
  rescue
    puts "Error: Failed to parse config.yml."
    exit
  end
else
  config = {}
end

klass = Salt::Site
lib_path = File.join(__dir__, 'lib')

if Dir.exists?(lib_path)
  Dir.glob(File.join(lib_path, '*.rb')) do |file|
    require file
  end

  subclasses = Salt::Site.subclasses
  klass = subclasses.pop if subclasses.length == 1  
end

site = klass.new(config)
output_path = File.join(site.config['root'], site.config['paths']['site'])

begin
  site.generate
  puts "Site built (#{output_path})"
rescue Exception => e
  puts "Error: Failed to generate site (#{e})"
end

if command == :serve
  require 'webrick'

  begin
    puts "Serving up the site."

    server = WEBrick::HTTPServer.new(
      Port: 8080,
      DocumentRoot: File.join(output_path)
    )
  rescue
    puts "Error: Failed to start local web server."
    exit
  end

  trap 'INT' do
    server.shutdown
  end

  server.start
end